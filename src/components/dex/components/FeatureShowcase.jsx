import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';

// Styled components
const SectionContainer = styled.div`
  padding: 1rem 0 2rem;
`;

const SectionTitle = styled(motion.h2)`
  text-align: center;
  margin-bottom: 3rem;
  font-size: clamp(2rem, 5vw, 3rem);
`;

const Highlight = styled.span`
  background: var(--dex-gradient-primary);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
`;

const FeaturesGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
`;

const FeatureCard = styled(motion.div)`
  background: rgba(255, 255, 255, 0.03);
  backdrop-filter: blur(10px);
  border-radius: 20px;
  padding: 2rem;
  border: 1px solid rgba(255, 255, 255, 0.05);
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 6px;
    height: 40%;
    background: ${props => props.accentColor || 'var(--dex-accent-blue)'};
    border-radius: 3px;
  }
`;

const IconContainer = styled(motion.div)`
  width: 60px;
  height: 60px;
  border-radius: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.5rem;
  font-size: 2rem;
  background: rgba(255, 255, 255, 0.05);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: ${props => props.gradient || 'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(139, 92, 246, 0.2))'};
    opacity: 0.5;
  }
`;

const FeatureTitle = styled.h3`
  font-size: 1.5rem;
  margin-bottom: 0.75rem;
  font-weight: 700;
  color: white;
`;

const FeatureDescription = styled.p`
  font-size: 1rem;
  line-height: 1.6;
  color: var(--dex-text-secondary);
  margin-bottom: 0;
  flex-grow: 1;
`;

// Animation variants
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.1
    }
  }
};

const cardVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: { 
    opacity: 1, 
    y: 0,
    transition: { duration: 0.5 }
  }
};

const iconVariants = {
  hidden: { scale: 0.8, opacity: 0 },
  visible: { 
    scale: 1, 
    opacity: 1,
    transition: { duration: 0.5 }
  }
};

// Feature data
const features = [
  {
    icon: 'ü§ñ',
    title: 'AI-–ê–≥–µ–Ω—Ç—ã –≤ –†–∞–±–æ—á–µ–º –ü—Ä–æ—Ü–µ—Å—Å–µ',
    description: '–ù–µ–π—Ä–æ–∞–≥–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –∑–∞–¥–∞—á–∏, –ø—Ä–æ–≤–µ—Ä—è—é—Ç –∫–∞—á–µ—Å—Ç–≤–æ PRD, –Ω–∞—Ö–æ–¥—è—Ç —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç —É–ª—É—á—à–µ–Ω–∏—è.',
    accentColor: 'var(--dex-accent-blue)',
    gradient: 'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(16, 185, 129, 0.2))'
  },
  {
    icon: 'üìã',
    title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
    description: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PRD, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏—Å—Ç–æ—Ä–∏–π —Å –Ω—É–∂–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏.',
    accentColor: 'var(--dex-accent-purple)',
    gradient: 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(59, 130, 246, 0.2))'
  },
  {
    icon: 'üß™',
    title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¢–µ—Å—Ç–æ–≤',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ unit –∏ e2e —Ç–µ—Å—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏—á, —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ –≤–∞—à CI/CD –ø–∞–π–ø–ª–∞–π–Ω.',
    accentColor: 'var(--dex-accent-green)',
    gradient: 'linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(139, 92, 246, 0.2))'
  },
  {
    icon: 'üé®',
    title: 'AI-–î–∏–∑–∞–π–Ω',
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è UI-—ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤, –º–∞–∫–µ—Ç–æ–≤ –∏ –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π.',
    accentColor: 'var(--dex-accent-blue)',
    gradient: 'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(234, 88, 12, 0.2))'
  },
  {
    icon: 'üìä',
    title: '–í–∏–∑—É–∞–ª—å–Ω–∞—è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –º–µ—Ç—Ä–∏–∫ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.',
    accentColor: 'var(--dex-accent-purple)',
    gradient: 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(234, 88, 12, 0.2))'
  },
  {
    icon: 'üë©‚Äçüíª',
    title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –†–∞–±–æ—á–∏–º–∏ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏',
    description: '–ë–µ—Å—à–æ–≤–Ω–æ–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –≤ Jira, Slack, GitHub, GitLab, Telegram –∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.',
    accentColor: 'var(--dex-accent-green)',
    gradient: 'linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(59, 130, 246, 0.2))'
  },
  {
    icon: 'üîç',
    title: '–ü—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–π –ê–Ω–∞–ª–∏–∑ –ü—Ä–æ–±–ª–µ–º',
    description: '–ù–µ–π—Ä–æ—Å–µ—Ç—å –Ω–∞—Ö–æ–¥–∏—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏, —É–∑–∫–∏–µ –º–µ—Å—Ç–∞ –∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –∑–∞–¥–∞—á–∞—Ö –¥–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.',
    accentColor: 'var(--dex-accent-blue)',
    gradient: 'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(139, 92, 246, 0.2))'
  },
  {
    icon: 'üéì',
    title: '–û–±—É—á–µ–Ω–∏–µ –ö–æ–º–∞–Ω–¥—ã',
    description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ—Ä–∫—à–æ–ø—ã –ø–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é —Å AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É.',
    accentColor: 'var(--dex-accent-purple)',
    gradient: 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(16, 185, 129, 0.2))'
  },
];

const FeatureShowcase = () => {
  return (
    <SectionContainer id="features">
      <SectionTitle
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5 }}
      >
        –ö–ª—é—á–µ–≤—ã–µ <Highlight>–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</Highlight> DEX Terminal
      </SectionTitle>
      
      <FeaturesGrid
        as={motion.div}
        variants={containerVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, margin: "-100px" }}
      >
        {features.map((feature, index) => (
          <FeatureCard
            key={index}
            variants={cardVariants}
            accentColor={feature.accentColor}
          >
            <IconContainer
              variants={iconVariants}
              gradient={feature.gradient}
              whileHover={{ scale: 1.1, rotate: 5 }}
            >
              {feature.icon}
            </IconContainer>
            <FeatureTitle>{feature.title}</FeatureTitle>
            <FeatureDescription>{feature.description}</FeatureDescription>
          </FeatureCard>
        ))}
      </FeaturesGrid>
    </SectionContainer>
  );
};

export default FeatureShowcase; 