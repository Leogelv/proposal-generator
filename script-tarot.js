document.addEventListener('DOMContentLoaded', () => {
    // –°–æ–∑–¥–∞–µ–º –º–∞–≥–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏—Ü—ã –Ω–∞ –ø–µ—Ä–≤–æ–º —ç–∫—Ä–∞–Ω–µ
    createMagicParticles();
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                if (entry.target.classList.contains('solution-card') || 
                    entry.target.classList.contains('service-card') ||
                    entry.target.classList.contains('tech-section')) {
                    const children = entry.target.querySelectorAll('h3, .solution-icon, .service-icon, .tech-item, li');
                    children.forEach((child, index) => {
                        child.style.transitionDelay = `${0.1 + index * 0.05}s`;
                        child.classList.add('fade-in');
                        child.classList.add('visible');
                    });
                }
            }
        });
    }, {
        threshold: 0.1,
        rootMargin: '0px 0px -100px 0px'
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—Å–µ–º —Å–ª–∞–π–¥–∞–º
    document.querySelectorAll('.slide').forEach(slide => {
        slide.classList.add('fade-in');
        observer.observe(slide);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º
    document.querySelectorAll('.solution-card, .service-card, .package-card').forEach((card, index) => {
        card.classList.add('slide-up');
        card.style.transitionDelay = `${index * 0.1}s`;
        observer.observe(card);
    });

    // –≠—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    const titleSlide = document.getElementById('title-slide');
    if (titleSlide) {
        titleSlide.addEventListener('mousemove', (e) => {
            const mouseX = e.clientX / window.innerWidth;
            const mouseY = e.clientY / window.innerHeight;
            
            const title = document.querySelector('.hero-title');
            const subtitle = document.querySelector('.hero-subtitle');
            const ctaButton = document.querySelector('.cta-primary');
            const particles = document.querySelectorAll('.magic-particle');
            
            if (title) title.style.transform = `translate(${mouseX * -20}px, ${mouseY * -10}px)`;
            if (subtitle) subtitle.style.transform = `translate(${mouseX * -10}px, ${mouseY * -5}px)`;
            if (ctaButton) ctaButton.style.transform = `translate(${mouseX * -5}px, ${mouseY * -5}px)`;
            
            particles.forEach(particle => {
                const speed = parseFloat(particle.getAttribute('data-speed'));
                const x = (mouseX * 20) * speed;
                const y = (mouseY * 20) * speed;
                particle.style.transform = `translate(${x}px, ${y}px)`;
            });
        });
    }

    // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            
            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ Telegram
    document.querySelectorAll('a').forEach(link => {
        if (link.getAttribute('href') && link.getAttribute('href').includes('t.me/')) {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                window.open(this.getAttribute('href'), '_blank');
            });
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º 3D-—ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–µ—à–µ–Ω–∏–π
    document.querySelectorAll('.solution-card').forEach(card => {
        card.addEventListener('mousemove', (e) => {
            const rect = card.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            const centerX = rect.width / 2;
            const centerY = rect.height / 2;
            
            const angleX = (y - centerY) / 20;
            const angleY = (x - centerX) / -20;
            
            card.style.transform = `perspective(1000px) rotateX(${angleX}deg) rotateY(${angleY}deg) scale3d(1.02, 1.02, 1.02)`;
        });
        
        card.addEventListener('mouseleave', () => {
            card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)';
        });
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∏–∫–æ–Ω–æ–∫ –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö
    document.querySelectorAll('.tech-item').forEach(item => {
        item.addEventListener('mouseenter', () => {
            const icon = item.querySelector('.tech-icon');
            icon.style.animation = 'pulse 0.5s';
            
            setTimeout(() => {
                icon.style.animation = '';
            }, 500);
        });
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∞—Å—Ç–∏—Ü –Ω–∞ —Ñ–æ–Ω–µ
function createMagicParticles() {
    const container = document.getElementById('magic-particles');
    if (!container) return;

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.innerHTML = '';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã —á–∞—Å—Ç–∏—Ü
    const particleTypes = [
        { emoji: '‚ú®', size: '10px', animationDuration: '15s' },
        { emoji: 'üîÆ', size: '20px', animationDuration: '25s' },
        { emoji: '‚≠ê', size: '12px', animationDuration: '20s' },
        { emoji: 'üåü', size: '15px', animationDuration: '22s' },
        { emoji: 'üí´', size: '13px', animationDuration: '18s' }
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes float {
            0% {
                transform: translateY(0) translateX(0) rotate(0);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 0.8;
            }
            100% {
                transform: translateY(-100vh) translateX(var(--tx)) rotate(360deg);
                opacity: 0;
            }
        }
        
        @keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.3);
            }
        }
    `;
    document.head.appendChild(style);
    
    // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã
    for (let i = 0; i < 30; i++) {
        const randomType = particleTypes[Math.floor(Math.random() * particleTypes.length)];
        const particle = document.createElement('div');
        
        // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –∏ –∑–∞–¥–µ—Ä–∂–∫–∞
        const posX = Math.random() * 100;
        const delay = Math.random() * 15;
        const duration = parseFloat(randomType.animationDuration) + (Math.random() * 10 - 5);
        const translateX = Math.random() * 100 - 50; // –°–ª—É—á–∞–π–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ X
        
        // –°–ª—É—á–∞–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞
        const speed = Math.random() * 0.5 + 0.1;
        
        // –°—Ç–∏–ª–∏ —á–∞—Å—Ç–∏—Ü—ã
        particle.classList.add('magic-particle');
        particle.setAttribute('data-speed', speed);
        particle.style.cssText = `
            position: absolute;
            left: ${posX}%;
            bottom: -20px;
            font-size: ${randomType.size};
            z-index: 1;
            animation: float ${duration}s ease-in infinite;
            animation-delay: ${delay}s;
            --tx: ${translateX}px;
            opacity: 0;
            filter: drop-shadow(0 0 5px rgba(191, 90, 242, 0.7));
        `;
        
        particle.textContent = randomType.emoji;
        container.appendChild(particle);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –¢–∞—Ä–æ
    const tarotSymbols = ['‚ô†', '‚ô•', '‚ô¶', '‚ô£', '‚òÖ', '‚òΩ', '‚òÄ', '‚ôà', '‚ôâ', '‚ôä', '‚ôã', '‚ôå', '‚ôç', '‚ôé', '‚ôè', '‚ôê', '‚ôë', '‚ôí', '‚ôì'];
    
    for (let i = 0; i < 25; i++) {
        const symbolIndex = Math.floor(Math.random() * tarotSymbols.length);
        const particle = document.createElement('div');
        
        // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –∏ –∑–∞–¥–µ—Ä–∂–∫–∞
        const posX = Math.random() * 100;
        const delay = Math.random() * 20;
        const duration = 20 + (Math.random() * 15);
        const size = 12 + (Math.random() * 15);
        const translateX = Math.random() * 120 - 60;
        const speed = Math.random() * 0.5 + 0.1;
        
        // –°—Ç–∏–ª–∏ —á–∞—Å—Ç–∏—Ü—ã
        particle.classList.add('magic-particle');
        particle.setAttribute('data-speed', speed);
        particle.style.cssText = `
            position: absolute;
            left: ${posX}%;
            bottom: -20px;
            font-size: ${size}px;
            z-index: 1;
            animation: float ${duration}s ease-in infinite;
            animation-delay: ${delay}s;
            --tx: ${translateX}px;
            opacity: 0;
            color: rgba(191, 90, 242, 0.5);
            filter: drop-shadow(0 0 5px rgba(191, 90, 242, 0.3));
        `;
        
        particle.textContent = tarotSymbols[symbolIndex];
        container.appendChild(particle);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–µ—Ç—è—â–∏–µ—Å—è –æ–≥–æ–Ω—å–∫–∏
    for (let i = 0; i < 40; i++) {
        const particle = document.createElement('div');
        
        // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –∏ –∑–∞–¥–µ—Ä–∂–∫–∞
        const posX = Math.random() * 100;
        const delay = Math.random() * 15;
        const duration = 15 + (Math.random() * 10);
        const size = 3 + (Math.random() * 4);
        const translateX = Math.random() * 100 - 50;
        const speed = Math.random() * 0.5 + 0.1;
        
        // –°–ª—É—á–∞–π–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –æ–≥–æ–Ω—å–∫–æ–≤
        const colors = ['rgba(191, 90, 242, 0.8)', 'rgba(219, 39, 119, 0.8)', 'rgba(30, 64, 175, 0.8)'];
        const color = colors[Math.floor(Math.random() * colors.length)];
        
        // –°—Ç–∏–ª–∏ —á–∞—Å—Ç–∏—Ü—ã
        particle.classList.add('magic-particle');
        particle.setAttribute('data-speed', speed);
        particle.style.cssText = `
            position: absolute;
            left: ${posX}%;
            bottom: -20px;
            width: ${size}px;
            height: ${size}px;
            border-radius: 50%;
            background-color: ${color};
            z-index: 1;
            animation: float ${duration}s ease-in infinite;
            animation-delay: ${delay}s;
            --tx: ${translateX}px;
            opacity: 0;
            box-shadow: 0 0 10px ${color}, 0 0 20px ${color};
        `;
        
        container.appendChild(particle);
    }
} 